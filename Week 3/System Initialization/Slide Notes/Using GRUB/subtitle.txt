We will now demonstrate how you can use GRUB to pick different operating systems, kernels, or specify kernel command line parameters to boot your system with. So, let's start up a CentOS 7 virtual machine using VMWare. Okay, and we can pick at the GRUB screen which kernel we want to start. I will pick this third one here. And if I would just to hit "Return", it would start up normally and running that kernel. I would like to do something a little more ambitious, so I'll hit "e" for edit, and then I'll scroll down to what we call the kernel command line, and that's the one that starts with Linux 16 here, and I'll do two things. At the end of the kernel command line, I'll append the 3. Which means go to runlevel three or pure text and no graphical login screen. And then I'll also comment out the words here quiet. That means it will show all the kernel boot messages instead of just some nice little graphical screen when it boots. Which I can also disable by commenting out the previous parameter, RGB, which is also for graphical interface. And then I'll hit Ctrl-x to start, as it says in the help messages at the bottom here. And so now this system is starting, you're seeing every single message that happens when it starts. And I will go to a pure virtual terminal or command line login screen. You see it's taken about 8 seconds so far to get here, 13 seconds now to get the final part, and now I'm at a boot screen, so I'll say "coop", I'm sorry, "student". And I'll give the "student" password. And we're fully up and normally running. Now, if I wanted to start the graphical console, I'll use a command we'll discuss in the next section, I say "sudo systemctl start gdm", which is the GNOME display manager. So, I'm going to start that up and that will bring up a graphical login screen. And there we go. And I could type in my username and password and I'll be going. So that's how you use GRUB to control your booting procedure.