Let's get some experience working with fdisk and examining and modifying partitions on a Fedora 25 virtual machine. This machine has a 40 gigabyte disk, of which only 20 gigabytes are being used, so let's run "fdisk /dev/sda". You'll notice I am logged in as root here, instead of a normal user, it'll make our life much easier. If I type "m" for help, I will see all the possible commands, but it's a rather long list, I encourage you to look at. But let's just experiment with some of them. So, "p" means print and it's showing me I have a 40 gigabyte disk, as I said, of which there's 19G in a Linux partition. So, the files on the system are all in one big partition, nothing fancy, and there's a one gigabyte swap partition. So, let's say I want to create a new one, I type "n" for new, and I'll make it a primary partition, and I'll take the default number of 3, and for the first sector, I'll just take the default, which is to start right after the second partition. I could give the last sector to give the size, that's a little bit complicated, but I can also specify the size in gigabytes. So, say "+5G" and it's telling me it's making a partition of 3 of type Linux and of 5GiB. If I want to modify the type, I would type lowercase "t" for type, and let's say I say partition 3. But then I have to know the actual index codes. So, if I type capital "L", it tells me all the different possible partitions I can set up. In many cases, it really doesn't matter what you put in the system. Once you format the partition, the system will just look at it anyway. But you see here's 83 as a standard Linux partition, so I'll just leave it at that with 83, and "p" is just a normal partition. I have to write out the partition scheme with "w", and that worked, but you notice the system says it may have some trouble using this partition, unless I reboot or run "partprobe" or "kpartx". So, let's run "partprobe" for partition probe "-s", and it's telling me it's sort of 3 partitions and we do "fdisk", "-l /dev/sda", and that's fine. If I want, I can put a filesystem on that partition with "mkfs.ext4 /dev/sda3". I think I said it had a filesystem on it just from previous work that I did. It really didn't. So, it's a relic of the past. So, that's how I would do things from the command line. There's a graphical utility called "gparted" that you can find for almost all distributions, though it often doesn't come in the default set of packages. So, let me run "gparted" and that gives you a graphical display of what's going on. So, you can see here's my first partition, and then here's my swap partition, and then here's the new partition that I made, so let's make that bigger. So, you can do a number of things with "gparted". First, let me make another partition, so here I go to my allocated space there and then I click on Partition, I say New, and I can control all this graphically, so I'll make it that's about eight gigabytes or so, and I'll just say add, and I can control the type of filesystem, I can give a name, and a label, but I won't do any of that now, and then when I actually click on the arrow up here, the changes will be applied. It's always going to warn you when you try to make a change in the partition table, that it's kind of a potentially dangerous operation. Now, there's other things I can do here, this is where the graphical utilities are useful, because these things are hard to do from the command line. Suppose I click on the new one I just made, you notice I still have space after that partition, I can click on partition and then I can go resize and move and I can move it, so I say to the end of the hard disk. I can click on check mark, save, yes and this would be slow if the partition actually contains some data, because it has to copy everything over, but since it's pretty empty, the utility is smart enough to do it quickly, I can also do things like I can change the size, so let me look at this partition 3 we made at the command line, and I'll do the resize and move it. Last time, I just moved it. This time let me make it bigger, that has worked just fine. You can look at the details if you want, telling you everything that it did. It had to check the filesystem for errors, increase the partition first, and then grow the filesystem to fill the partition, and then it does some other checks, etc. So, that's some basic experience in how to manipulate partition tables on a basic system.