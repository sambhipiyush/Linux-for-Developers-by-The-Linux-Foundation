Let's get some practice with the basic low-level command for the Debian packaging system, dpkg, or d-package. So, to get a list of all the packages on this system, I can simply type "dpkg --list". And I'll just pipe that into "less", because it's a long list [dpkg --list | less]. Okay, actually, if I don't use "less", for some reason, it's more compact. Okay, so there are a lot of different packages on the system. Now, if I want to see some information just about a particular package, I could just grep, let's say, bzip2 to see what's going on with bzip2 [dpkg --list | grep bzip2]. And that's the information about bzip2 that tells us the version number, the architecture, which here is amd64, and it's description as a high quality block sorting file compressor utility. So it's a more advanced program of better compression than gzip or the old fashion zip program. If I want to see what's actually contained in that package, I can do "dpkg --listfiles", and then the name of it [dpkg --listfiles bzip2]. And then I'll go slower by putting into less [dpkg --listfiles bzip2 | less]. And you see there is the executables in the /bin directory. And then what's under /user is basically documentation. Under /user/share/doc, /user/share/man, etc. If I try to remove the package, let's see what happens. So do "sudo dpkg" and, of course, I have to have root privilege to remove the package. So I'm removing bzip2, "sudo dpkg --remove bzip2". And it's telling me I cannot do this because I need the development package, dpkg-dev, that would be headers and stuff for programs which use this in a library version. And fire-roller, which is an archive extractor that's prominent on Linux systems, so I would have to remove all three of them. We'll see later when we use tools like apt-get, it's easier to deal with these dependencies.